{"version":3,"sources":["config/ReactotronConfig.js","store/ducks/users.js","store/ducks/index.js","services/api.js","store/sagas/users.js","store/sagas/index.js","store/index.js","components/Map/styles.js","components/Map/index.js","components/UserList/styles.js","components/UserList/index.js","components/InsertUserModal/styles.js","components/InsertUserModal/index.js","App.js","serviceWorker.js","index.js"],"names":["Reactotron","configure","name","use","reactotronRedux","connect","INITIAL_STATE","all","modalVisible","userToAdd","loading","requestError","Types","SET_POSITION","USER_DATA_REQUEST","USER_DATA_SUCCESS","USER_DATA_FAILURE","Creators","userDataRequest","user","type","payload","userDataSuccess","data","setPosition","position","reducers","combineReducers","users","state","arguments","length","undefined","action","Object","objectSpread","newUser","concat","toConsumableArray","error","api","axios","create","baseURL","_ref","userData","regenerator_default","a","wrap","_context","prev","next","call","get","sent","login","avatar_url","id","put","UserTypes","t0","message","stop","_marked","rootSaga","takeLatest","t1","t2","sagas_marked","sagaMiddleware","createSagaMiddleware","store","createStore","compose","applyMiddleware","createEnhancer","run","MarkerContent","styled","div","_templateObject","props","Map","viewport","width","height","latitude","longitude","zoom","handleMapClick","e","arrLngLat","lngLat","lat","lng","_this","_this2","this","react_default","createElement","esm","assign","mapboxApiAccessToken","token","onClick","map","key","Component","defaultProps","dispatch","bindActionCreators","UserActions","Container","aside","styles_templateObject","List","ul","_templateObject2","ListItem","li","_templateObject3","src","alt","index_esm","InsertUserModal_styles_templateObject","visibility","Form","form","styles_templateObject2","Input","input","styles_templateObject3","ContainerButtons","_templateObject4","SaveButton","button","_templateObject5","CancelButton","_templateObject6","InsertUserModal","query","handleInputChange","setState","target","value","handleSubmit","preventDefault","nameInput","focus","_this$props","styles_Container","onSubmit","placeholder","onChange","ref","App","es","components_Map","components_UserList","components_InsertUserModal","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qMAOeA,GAJIA,IAAWC,UAAU,CAAEC,KAAM,mBAC9CC,IAAIC,6BACJC,UAEaL,EAAf,mBCPMM,EAAgB,CACrBC,IAAK,GACLC,cAAc,EACdC,UAAW,GACXC,SAAS,EACTC,aAAc,IAGFC,EAAQ,CACpBC,aAAc,sBACdC,kBAAmB,2BACnBC,kBAAmB,2BACnBC,kBAAmB,4BAqCb,IAAMC,EAAW,CACvBC,gBAAiB,SAAAC,GAAI,MAAK,CACzBC,KAAMR,EAAME,kBACZO,QAAS,CACRF,UAGFG,gBAAiB,SAAAC,GAAI,MAAK,CACzBH,KAAMR,EAAMG,kBACZM,QAAS,CACRE,UAGFC,YAAa,SAAAC,GAAQ,MAAK,CACzBL,KAAMR,EAAMC,aACZQ,QAAS,CACRI,eC1DYC,EAJEC,YAAgB,CAChCC,MDWc,WAA8C,IAA/BC,EAA+BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAvBxB,EAAe2B,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC5D,OAAQC,EAAOb,MACd,KAAKR,EAAMC,aACV,OAAOqB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECrB,cAAc,EACdC,UAAW,CAAEgB,SAAUQ,EAAOZ,QAAQI,YAExC,KAAKb,EAAME,kBACV,OAAOoB,OAAAC,EAAA,EAAAD,CAAA,GAAKL,EAAZ,CAAmBnB,SAAS,IAE7B,KAAKE,EAAMG,kBACV,IAAMqB,EAAOF,OAAAC,EAAA,EAAAD,CAAA,GAAQL,EAAMpB,WAG3B,OAFA2B,EAAQb,KAAOU,EAAOZ,QAAQE,KAEvBW,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAECtB,IAAG,GAAA8B,OAAAH,OAAAI,EAAA,EAAAJ,CAAML,EAAMtB,KAAZ,CAAiB6B,IACpB5B,cAAc,EACdE,SAAS,IAGX,KAAKE,EAAMI,kBACV,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACHL,EADJ,CAEClB,aAAcsB,EAAOZ,QAAQkB,MAC7B7B,SAAS,EACTF,cAAc,IAEhB,QACC,OAAOqB,uCEvCKW,SAJHC,EAAMC,OAAO,CACxBC,QAAS,4CCGOzB,GAAV,SAAUA,EAAgBe,GAA1B,IAAAW,EAAArB,EAAAsB,EAAA,OAAAC,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEY,OAFZF,EAAAC,KAAA,EAAAD,EAAAE,KAAA,EAEkBC,YAAKZ,EAAIa,IAAKpB,EAAOZ,QAAQF,MAF/C,OAUL,OAVKyB,EAAAK,EAAAK,KAEG/B,EAFHqB,EAEGrB,KAEFsB,EAAW,CAChBU,MAAOhC,EAAKgC,MACZC,WAAYjC,EAAKiC,WACjBC,GAAIlC,EAAKkC,IAPLR,EAAAE,KAAA,EAUCO,YAAI,CACTtC,KAAMuC,EAAU5C,kBAChBM,QAAS,CACRE,KAAMsB,KAbH,OAAAI,EAAAE,KAAA,iBAiBL,OAjBKF,EAAAC,KAAA,GAAAD,EAAAW,GAAAX,EAAA,SAAAA,EAAAE,KAAA,GAiBCO,YAAI,CACTtC,KAAMuC,EAAU3C,kBAChBK,QAAS,CACRkB,MAAOU,EAAAW,GAAEC,WApBN,yBAAAZ,EAAAa,SAAAC,EAAA,8BCFkBC,GAAV,SAAUA,IAAV,OAAAlB,EAAAC,EAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACT,OADSF,EAAAW,GACdrD,IADc0C,EAAAE,KAAA,EACHc,YAAWN,EAAU7C,kBAAmBI,GADrC,OAAA+B,EAAAiB,GAAAjB,EAAAK,KAAAL,EAAAkB,GAAA,CAAAlB,EAAAiB,KAAA,EAAAjB,EAAAW,IAAAX,EAAAkB,IAAA,wBAAAlB,EAAAa,SAAAM,GCGf,IAAMC,EAAiBC,cAEjBC,EAAQC,YACb9C,EACA+C,YACCC,YAAgBL,GAChBrE,EAAW2E,mBAGbN,EAAeO,IAAIZ,GAEJO,qSChBR,IAAMM,EAAgBC,IAAOC,IAAVC,IAKD,SAAAC,GAAK,OAAIA,EAAMzB,aCKlC0B,6MACLrD,MAAQ,CACPsD,SAAU,CACTC,MAAO,QACPC,OAAQ,QACRC,SAAU,QACVC,WAAY,SACZC,KAAM,OAIRC,eAAiB,SAAAC,GAChB,IAAMC,EAAYD,EAAEE,OAEdnE,EAAW,CAChBoE,IAAKF,EAAU,GACfG,IAAKH,EAAU,IAGhBI,EAAKd,MAAMzD,YAAYC,4EAGf,IAAAuE,EAAAC,KACArE,EAAUqE,KAAKhB,MAAfrD,MACR,OACCsE,EAAAnD,EAAAoD,cAACC,EAAA,EAADlE,OAAAmE,OAAA,GACKJ,KAAKpE,MAAMsD,SADhB,CAECmB,qBAAsBL,KAAKhB,MAAMsB,MACjCC,QAAS,SAAAd,GAAC,OAAIM,EAAKP,eAAeC,MAEjC9D,EAAM6E,IAAI,SAAAtF,GAAI,OACd+E,EAAAnD,EAAAoD,cAACC,EAAA,EAAD,CACCM,IAAKvF,EAAKI,KAAKkC,GACf6B,SAAUnE,EAAKM,SAASoE,IACxBN,UAAWpE,EAAKM,SAASqE,KAEzBI,EAAAnD,EAAAoD,cAACtB,EAAD,CAAerB,WAAYrC,EAAKI,KAAKiC,wBApCzBmD,aA4ClBzB,EAAI0B,aAAe,CAClBL,MACC,8FAmBF,IAMelG,cANS,SAAAwB,GAAK,MAAK,CACjCD,MAAOC,EAAMD,MAAMrB,MAGO,SAAAsG,GAAQ,OAAIC,YAAmBC,EAAaF,IAExDxG,CAGb6E,46BCpFK,IAAM8B,EAAYlC,IAAOmC,MAAVC,KAUTC,EAAOrC,IAAOsC,GAAVC,KAMJC,EAAWxC,IAAOyC,GAAVC,aC0BNnH,cAlBS,SAAAwB,GAAK,MAAK,CACjCD,MAAOC,EAAMD,MAAMrB,MAiBLF,CApCE,SAAAuC,GAAA,IAAGhB,EAAHgB,EAAGhB,MAAH,OAChBsE,EAAAnD,EAAAoD,cAACa,EAAD,KACCd,EAAAnD,EAAAoD,cAACgB,EAAD,KACIvF,EAAMG,OACRH,EAAM6E,IAAI,SAAAtF,GAAI,OACb+E,EAAAnD,EAAAoD,cAACmB,EAAD,CAAUZ,IAAKvF,EAAKI,KAAKkC,IACxByC,EAAAnD,EAAAoD,cAAA,OAAKsB,IAAKtG,EAAKI,KAAKiC,WAAYkE,IAAI,kBACpCxB,EAAAnD,EAAAoD,cAAA,UAAKhF,EAAKI,KAAKgC,OACf2C,EAAAnD,EAAAoD,cAACwB,EAAA,EAAD,SAIFzB,EAAAnD,EAAAoD,cAAA,kyCClBG,IAAMa,GAAYlC,IAAOC,IAAV6C,KAUP,SAAA3C,GAAK,OAAIA,EAAM4C,aAEjBC,GAAOhD,IAAOiD,KAAVC,MAOJC,GAAQnD,IAAOoD,MAAVC,MAQLC,GAAmBtD,IAAOC,IAAVsD,MAGhBC,GAAaxD,IAAOyD,OAAVC,KAWVC,GAAe3D,IAAOyD,OAAVG,KC5BnBC,8MACL9G,MAAQ,CACP+G,MAAO,MAORC,kBAAoB,SAAAnD,GACnBK,EAAK+C,SAAS,CACbF,MAAOlD,EAAEqD,OAAOC,WAIlBC,aAAe,SAAAvD,GACdA,EAAEwD,iBACFnD,EAAKd,MAAM/D,gBAAgB6E,EAAKlE,MAAM+G,OAEtC7C,EAAK+C,SAAS,CAAEF,MAAO,yFAbvB3C,KAAKkD,UAAUC,yCAeP,IAAApD,EAAAC,KAAAoD,EAC0BpD,KAAKhB,MAA/BzE,EADA6I,EACA7I,aAAcE,EADd2I,EACc3I,QACtB,OACCwF,EAAAnD,EAAAoD,cAACmD,GAAD,CAAWzB,WAAYrH,EAAe,QAAU,UAC/C0F,EAAAnD,EAAAoD,cAAC2B,GAAD,CAAMyB,SAAU,SAAA7D,GAAC,OAAIM,EAAKiD,aAAavD,KACtCQ,EAAAnD,EAAAoD,cAAC8B,GAAD,CACC7G,KAAK,OACLoI,YAAY,uBACZR,MAAO/C,KAAKpE,MAAM+G,MAClBa,SAAU,SAAA/D,GAAC,OAAIM,EAAK6C,kBAAkBnD,IACtCgE,IAAK,SAAAxB,GACJlC,EAAKmD,UAAYjB,KAGnBhC,EAAAnD,EAAAoD,cAACiC,GAAD,KACClC,EAAAnD,EAAAoD,cAACmC,GAAD,CAAYlH,KAAK,UACfV,EAAU,gBAAkB,UAE9BwF,EAAAnD,EAAAoD,cAACsC,GAAD,CAAcrH,KAAK,UAAnB,sBAvCwBuF,aAsDftG,eAPS,SAAAwB,GAAK,MAAK,CACjCrB,aAAcqB,EAAMD,MAAMpB,aAC1BE,QAASmB,EAAMD,MAAMlB,UAGK,SAAAmG,GAAQ,OAAIC,YAAmBC,EAAaF,IAExDxG,CAGbsI,ICtDagB,OAVf,WACC,OACCzD,EAAAnD,EAAAoD,cAACyD,EAAA,EAAD,CAAUrF,MAAOA,GAChB2B,EAAAnD,EAAAoD,cAAC0D,EAAD,MACA3D,EAAAnD,EAAAoD,cAAC2D,EAAD,MACA5D,EAAAnD,EAAAoD,cAAC4D,GAAD,QCDiBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOpE,EAAAnD,EAAAoD,cAACoE,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.83a44b98.chunk.js","sourcesContent":["import Reactotron from 'reactotron-react-js'\r\nimport { reactotronRedux } from 'reactotron-redux'\r\n\r\nconst reactotron = Reactotron.configure({ name: 'Mao box github' })\r\n\t.use(reactotronRedux())\r\n\t.connect()\r\n\r\nexport default Reactotron\r\n","const INITIAL_STATE = {\r\n\tall: [],\r\n\tmodalVisible: false,\r\n\tuserToAdd: {},\r\n\tloading: false,\r\n\trequestError: '',\r\n}\r\n\r\nexport const Types = {\r\n\tSET_POSITION: '@users/SET_POSITION',\r\n\tUSER_DATA_REQUEST: '@users/USER_DATA_REQUEST',\r\n\tUSER_DATA_SUCCESS: '@users/USER_DATA_SUCCESS',\r\n\tUSER_DATA_FAILURE: '@users/USER_DATA_FAILURE',\r\n}\r\n\r\nexport default function users(state = INITIAL_STATE, action) {\r\n\tswitch (action.type) {\r\n\t\tcase Types.SET_POSITION:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tmodalVisible: true,\r\n\t\t\t\tuserToAdd: { position: action.payload.position },\r\n\t\t\t}\r\n\t\tcase Types.USER_DATA_REQUEST:\r\n\t\t\treturn { ...state, loading: true }\r\n\r\n\t\tcase Types.USER_DATA_SUCCESS:\r\n\t\t\tconst newUser = { ...state.userToAdd }\r\n\t\t\tnewUser.data = action.payload.data\r\n\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tall: [...state.all, newUser],\r\n\t\t\t\tmodalVisible: false,\r\n\t\t\t\tloading: false,\r\n\t\t\t}\r\n\r\n\t\tcase Types.USER_DATA_FAILURE:\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\trequestError: action.payload.error,\r\n\t\t\t\tloading: false,\r\n\t\t\t\tmodalVisible: false,\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state\r\n\t}\r\n}\r\n\r\nexport const Creators = {\r\n\tuserDataRequest: user => ({\r\n\t\ttype: Types.USER_DATA_REQUEST,\r\n\t\tpayload: {\r\n\t\t\tuser,\r\n\t\t},\r\n\t}),\r\n\tuserDataSuccess: data => ({\r\n\t\ttype: Types.USER_DATA_SUCCESS,\r\n\t\tpayload: {\r\n\t\t\tdata,\r\n\t\t},\r\n\t}),\r\n\tsetPosition: position => ({\r\n\t\ttype: Types.SET_POSITION,\r\n\t\tpayload: {\r\n\t\t\tposition,\r\n\t\t},\r\n\t}),\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport users from './users'\r\n\r\nconst reducers = combineReducers({\r\n\tusers,\r\n})\r\n\r\nexport default reducers\r\n","import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n\tbaseURL: 'https://api.github.com/users',\r\n})\r\n\r\nexport default api\r\n","import { call, put } from 'redux-saga/effects'\r\n\r\nimport api from '../../services/api'\r\n\r\nimport { Types as UserTypes } from '../ducks/users'\r\n\r\nexport function* userDataRequest(action) {\r\n\ttry {\r\n\t\tconst { data } = yield call(api.get, action.payload.user)\r\n\r\n\t\tconst userData = {\r\n\t\t\tlogin: data.login,\r\n\t\t\tavatar_url: data.avatar_url,\r\n\t\t\tid: data.id,\r\n\t\t}\r\n\r\n\t\tyield put({\r\n\t\t\ttype: UserTypes.USER_DATA_SUCCESS,\r\n\t\t\tpayload: {\r\n\t\t\t\tdata: userData,\r\n\t\t\t},\r\n\t\t})\r\n\t} catch (e) {\r\n\t\tyield put({\r\n\t\t\ttype: UserTypes.USER_DATA_FAILURE,\r\n\t\t\tpayload: {\r\n\t\t\t\terror: e.message,\r\n\t\t\t},\r\n\t\t})\r\n\t}\r\n}\r\n","import { all, takeLatest } from 'redux-saga/effects'\r\n// Types\r\nimport { Types as UserTypes } from '../ducks/users'\r\nimport { userDataRequest } from './users'\r\nexport default function* rootSaga() {\r\n\tall([yield takeLatest(UserTypes.USER_DATA_REQUEST, userDataRequest)])\r\n}\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport Reactotron from '../config/ReactotronConfig'\r\n\r\nimport reducers from './ducks'\r\nimport rootSaga from './sagas'\r\n\r\nconst sagaMiddleware = createSagaMiddleware()\r\n\r\nconst store = createStore(\r\n\treducers,\r\n\tcompose(\r\n\t\tapplyMiddleware(sagaMiddleware),\r\n\t\tReactotron.createEnhancer()\r\n\t)\r\n)\r\nsagaMiddleware.run(rootSaga)\r\n\r\nexport default store\r\n","import styled from 'styled-components'\r\n\r\nexport const MarkerContent = styled.div`\r\n\tborder-radius: 100%;\r\n\tbox-shadow: -1px 2px 5px black;\r\n\twidth: 50px;\r\n\theight: 50px;\r\n\tbackground-image: url(${props => props.avatar_url});\r\n\tbackground-size: cover;\r\n`\r\n","import React, { Component } from 'react'\r\nimport ReactMapGL, { Marker } from 'react-map-gl'\r\nimport PropTypes from 'prop-types'\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\n\r\n// Styles\r\nimport { MarkerContent } from './styles'\r\n\r\n// Actions\r\nimport { Creators as UserActions } from '../../store/ducks/users'\r\n\r\nclass Map extends Component {\r\n\tstate = {\r\n\t\tviewport: {\r\n\t\t\twidth: '100vw',\r\n\t\t\theight: '100vh',\r\n\t\t\tlatitude: 37.7577,\r\n\t\t\tlongitude: -122.4376,\r\n\t\t\tzoom: 14,\r\n\t\t},\r\n\t}\r\n\r\n\thandleMapClick = e => {\r\n\t\tconst arrLngLat = e.lngLat\r\n\r\n\t\tconst position = {\r\n\t\t\tlat: arrLngLat[1],\r\n\t\t\tlng: arrLngLat[0],\r\n\t\t}\r\n\r\n\t\tthis.props.setPosition(position)\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { users } = this.props\r\n\t\treturn (\r\n\t\t\t<ReactMapGL\r\n\t\t\t\t{...this.state.viewport}\r\n\t\t\t\tmapboxApiAccessToken={this.props.token}\r\n\t\t\t\tonClick={e => this.handleMapClick(e)}\r\n\t\t\t>\r\n\t\t\t\t{users.map(user => (\r\n\t\t\t\t\t<Marker\r\n\t\t\t\t\t\tkey={user.data.id}\r\n\t\t\t\t\t\tlatitude={user.position.lat}\r\n\t\t\t\t\t\tlongitude={user.position.lng}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MarkerContent avatar_url={user.data.avatar_url} />\r\n\t\t\t\t\t</Marker>\r\n\t\t\t\t))}\r\n\t\t\t</ReactMapGL>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nMap.defaultProps = {\r\n\ttoken:\r\n\t\t'pk.eyJ1IjoiZnJlc2F0dG8iLCJhIjoiY2pzOWJ0dTk4MWt4YTQ5dGZlNWh5YjB6YyJ9.WcFJT9u2Vy6CUtsDb7O6HQ',\r\n}\r\n\r\nMap.propTypes = {\r\n\ttoken: PropTypes.string.isRequired,\r\n\tusers: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number,\r\n\t\t\tlogin: PropTypes.string,\r\n\t\t\tposition: PropTypes.shape({\r\n\t\t\t\tlat: PropTypes.number,\r\n\t\t\t\tlng: PropTypes.number,\r\n\t\t\t}),\r\n\t\t\tavatar_url: PropTypes.string,\r\n\t\t})\r\n\t).isRequired,\r\n\tsetPosition: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tusers: state.users.all,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(UserActions, dispatch)\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(Map)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.aside`\r\n\tposition: fixed;\r\n\tborder-radius: 3px;\r\n\tleft: 5px;\r\n\ttop: 5px;\r\n\tpadding: 10px;\r\n\tbackground: #fff;\r\n\tbox-shadow: 2px 2px 5px -2px #9b9a9a;\r\n`\r\n\r\nexport const List = styled.ul`\r\n\tlist-style: none;\r\n\tpadding: 0;\r\n\tmargin: 0;\r\n`\r\n\r\nexport const ListItem = styled.li`\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: space-between;\r\n\tmargin-bottom: 0.5rem;\r\n\tborder-bottom: 1px solid #cccccc73;\r\n\tpadding-bottom: 0.5rem;\r\n\r\n\t:last-child {\r\n\t\tmargin-bottom: 0;\r\n\t\tborder-bottom: none;\r\n\t\tpadding-bottom: 0;\r\n\t}\r\n\r\n\th3 {\r\n\t\tmargin: 0;\r\n\t\tline-height: 1;\r\n\t\tfont-size: 14px;\r\n\t\tfont-weight: 500;\r\n\t\tmargin: 0 0.5rem;\r\n\t}\r\n\r\n\timg {\r\n\t\twidth: 30px;\r\n\t\theight: 30px;\r\n\t\tborder-radius: 100%;\r\n\t}\r\n\r\n\tsvg {\r\n\t\tfont-size: 21px;\r\n\t\tcolor: darkred;\r\n\t}\r\n`\r\n","import React from 'react'\r\nimport { Container, List, ListItem } from './styles'\r\nimport { connect } from 'react-redux'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { MdDelete } from 'react-icons/md'\r\n\r\nconst UserList = ({ users }) => (\r\n\t<Container>\r\n\t\t<List>\r\n\t\t\t{!!users.length ? (\r\n\t\t\t\tusers.map(user => (\r\n\t\t\t\t\t<ListItem key={user.data.id}>\r\n\t\t\t\t\t\t<img src={user.data.avatar_url} alt=\"avatar github\" />\r\n\t\t\t\t\t\t<h3>{user.data.login}</h3>\r\n\t\t\t\t\t\t<MdDelete />\r\n\t\t\t\t\t</ListItem>\r\n\t\t\t\t))\r\n\t\t\t) : (\r\n\t\t\t\t<p>Nenhum usuário cadastrado.</p>\r\n\t\t\t)}\r\n\t\t</List>\r\n\t</Container>\r\n)\r\n\r\nconst mapStateToProps = state => ({\r\n\tusers: state.users.all,\r\n})\r\n\r\nUserList.propTypes = {\r\n\tusers: PropTypes.arrayOf(\r\n\t\tPropTypes.shape({\r\n\t\t\tid: PropTypes.number,\r\n\t\t\tlogin: PropTypes.string,\r\n\t\t\tposition: PropTypes.shape({\r\n\t\t\t\tlat: PropTypes.number,\r\n\t\t\t\tlng: PropTypes.number,\r\n\t\t\t}),\r\n\t\t\tavatar_url: PropTypes.string,\r\n\t\t})\r\n\t).isRequired,\r\n}\r\n\r\nexport default connect(mapStateToProps)(UserList)\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n\tposition: fixed;\r\n\ttop: 0;\r\n\tleft: 0;\r\n\twidth: 100vw;\r\n\theight: 100vh;\r\n\tbackground-color: rgba(0, 0, 0, 0.9);\r\n\tdisplay: flex;\r\n\talign-items: center;\r\n\tjustify-content: center;\r\n\tvisibility: ${props => props.visibility};\r\n`\r\nexport const Form = styled.form`\r\n\tbackground: white;\r\n\tborder-radius: 3px;\r\n\tpadding: 20px;\r\n\twidth: 100%;\r\n\tmax-width: 290px;\r\n`\r\nexport const Input = styled.input`\r\n\twidth: 100%;\r\n\tmargin-bottom: 0.4rem;\r\n\tpadding: 5px;\r\n\tborder-radius: 3px;\r\n\tborder: 1px solid #9b9b9b;\r\n`\r\n\r\nexport const ContainerButtons = styled.div`\r\n\tdisplay: flex;\r\n`\r\nexport const SaveButton = styled.button`\r\n\tflex: 1;\r\n\tmargin-right: 0.2rem;\r\n\tborder: none;\r\n\tpadding: 8px;\r\n\tborder-radius: 3px;\r\n\tbackground-color: #99c0f8;\r\n\tcolor: #fff;\r\n\ttext-shadow: -1px 1px 1px #939393;\r\n\tcursor: pointer;\r\n`\r\nexport const CancelButton = styled.button`\r\n\tflex: 1;\r\n\tmargin-left: 0.2rem;\r\n\tborder: none;\r\n\tpadding: 8px;\r\n\tborder-radius: 3px;\r\n\tbackground-color: #ff5d5d;\r\n\tcolor: #fff;\r\n\ttext-shadow: -1px 1px 1px #939393;\r\n\tcursor: pointer;\r\n`\r\n","import React, { Component } from 'react'\r\n\r\nimport { connect } from 'react-redux'\r\nimport { bindActionCreators } from 'redux'\r\nimport { Creators as UserActions } from '../../store/ducks/users'\r\n// Stylesss\r\nimport {\r\n\tContainer,\r\n\tForm,\r\n\tInput,\r\n\tContainerButtons,\r\n\tSaveButton,\r\n\tCancelButton,\r\n} from './styles'\r\n\r\nclass InsertUserModal extends Component {\r\n\tstate = {\r\n\t\tquery: '',\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.nameInput.focus()\r\n\t}\r\n\r\n\thandleInputChange = e => {\r\n\t\tthis.setState({\r\n\t\t\tquery: e.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\thandleSubmit = e => {\r\n\t\te.preventDefault()\r\n\t\tthis.props.userDataRequest(this.state.query)\r\n\r\n\t\tthis.setState({ query: '' })\r\n\t}\r\n\trender() {\r\n\t\tconst { modalVisible, loading } = this.props\r\n\t\treturn (\r\n\t\t\t<Container visibility={modalVisible ? 'block' : 'hidden'}>\r\n\t\t\t\t<Form onSubmit={e => this.handleSubmit(e)}>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tplaceholder=\"Usuário no github\"\r\n\t\t\t\t\t\tvalue={this.state.query}\r\n\t\t\t\t\t\tonChange={e => this.handleInputChange(e)}\r\n\t\t\t\t\t\tref={input => {\r\n\t\t\t\t\t\t\tthis.nameInput = input\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<ContainerButtons>\r\n\t\t\t\t\t\t<SaveButton type=\"submit\">\r\n\t\t\t\t\t\t\t{loading ? 'Carregando...' : 'Salvar'}\r\n\t\t\t\t\t\t</SaveButton>\r\n\t\t\t\t\t\t<CancelButton type=\"button\">Cancelar</CancelButton>\r\n\t\t\t\t\t</ContainerButtons>\r\n\t\t\t\t</Form>\r\n\t\t\t</Container>\r\n\t\t)\r\n\t}\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n\tmodalVisible: state.users.modalVisible,\r\n\tloading: state.users.loading,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => bindActionCreators(UserActions, dispatch)\r\n\r\nexport default connect(\r\n\tmapStateToProps,\r\n\tmapDispatchToProps\r\n)(InsertUserModal)\r\n","import React from 'react'\nimport './App.css'\nimport { Provider, connect } from 'react-redux'\nimport store from './store'\nimport Map from './components/Map'\nimport UserList from './components/UserList'\nimport InsertUserModal from './components/InsertUserModal'\n\nfunction App() {\n\treturn (\n\t\t<Provider store={store}>\n\t\t\t<Map />\n\t\t\t<UserList />\n\t\t\t<InsertUserModal />\n\t\t</Provider>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}